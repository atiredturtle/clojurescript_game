{:rename-macros {}, :renames {}, :externs {document {getElementById {}}, Object {getContext {}, fillStyle {}, fillRect {}, width {}, height {}}, window {innerWidth {}, innerHeight {}}, alert {}, setInterval {}}, :use-macros {}, :excludes #{}, :name testCLJS.core, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {canvas {:name testCLJS.core/canvas, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 4, :column 1, :end-line 4, :end-column 12, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 4, :column 6, :end-line 4, :end-column 12}, :tag js}, ctx {:name testCLJS.core/ctx, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 5, :column 1, :end-line 5, :end-column 9, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 5, :column 6, :end-line 5, :end-column 9}, :tag js}, player {:name testCLJS.core/player, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 8, :column 6, :end-line 8, :end-column 12}, :tag any}, player_init {:protocol-inline nil, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([]))}, :name testCLJS.core/player_init, :variadic false, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, drawObject {:protocol-inline nil, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([obj]))}, :name testCLJS.core/drawObject, :variadic false, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :end-column 17, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, moveObject {:protocol-inline nil, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 26, :column 7, :end-line 26, :end-column 17, :arglists (quote ([obj]))}, :name testCLJS.core/moveObject, :variadic false, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :end-column 17, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, mainLoop {:protocol-inline nil, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([]))}, :name testCLJS.core/mainLoop, :variadic false, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, keyDownHandler {:protocol-inline nil, :meta {:file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :line 40, :column 7, :end-line 40, :end-column 21, :arglists (quote ([e]))}, :name testCLJS.core/keyDownHandler, :variadic false, :file "/Users/guysegev/repos/clojurescript_game/testCLJS/src/testCLJS/core.cljs", :end-column 21, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:y :color :width :vx :vy :x :height}, :order [:x :y :vx :vy :width :height :color]}, :doc nil}